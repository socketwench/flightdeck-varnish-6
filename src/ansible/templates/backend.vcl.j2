
# This is a basic VCL configuration file for varnish.  See the vcl(7)
# man page for details on VCL syntax and semantics.
#
# Default backend definition.  Set this to point to your content
# server.
{% for _backend in flightdeck_varnish.backends | default(flightdeck_varnish_defaults.backends) %}
backend {{ _backend.name }} {
  .host = "{{ _backend.host | default('localhost') }}";
  .port = "{{ _backend.port | default('80') }}";

{% if _backend.probe | default(flightdeck_varnish_default_backend.probe) %}
  .probe = {
    # We use .request instead of .url because we need to force-set a valid
    # URL to Apache. If we don't, Varnish will mark it has sick and 503.
    .request =
    "HEAD / HTTP/1.1"
    "Host: {{ _backend.probeHost | default(flightdeck_varnish_default_backend.probeHost) }}"
    {% for _header in _backend.probeHeaders | default(flightdeck_varnish_default_backend.probeHeaders) %}
    "{{ _header.name }}: {{ _header.value }}"
    {% endfor %}
    "Connection: close";

    # How often to check the backend health.
    .interval  = {{ _backend.probe.probeInterval | default(flightdeck_varnish_default_backend.probeInterval) }};

    # How long to wait on each individual check.
    .timeout   = {{ _backend.probe.probeTimeout | default(flightdeck_varnish_default_backend.probeTimeout) }};

    # If .threshold checks fail of the last .window times, mark the BE as sick.
    .threshold = {{ _backend.probe.probeThreshold | default(flightdeck_varnish_default_backend.probeThreshold) }};
    .window    = {{ _backend.probe.probeWindow | default(flightdeck_varnish_default_backend.probeWindow) }};
  }
{% endif %}

  .first_byte_timeout     = {{ _backend.probe.firstByteTimeout | default(flightdeck_varnish_default_backend.firstByteTimeout) }};
  .connect_timeout        = {{ _backend.probe.connectTimeout | default(flightdeck_varnish_default_backend.connectTimeout) }};
  .between_bytes_timeout  = {{ _backend.probe.betweenBytesTimeout | default(flightdeck_varnish_default_backend.betweenBytesTimeout) }};
}
{% endfor %}
