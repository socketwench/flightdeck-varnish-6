---
flighdeck_motd_name: Varnish 6.4

flightdeck_groups:
  - name: "varnish"

flightdeck_users:
  - name: "varnish"
    group: "varnish"
    home: "/var/lib/varnish"

flightdeck_root_prompt: '\u@flightdeck-varnish-6.4:\w# '
flightdeck_user_prompt: '\u@flightdeck-varnish-6.4:\w$ '

flightdeck_motd_links:
  - name: 'Code & docs'
    url: 'https://github.com/ten7/flightdeck-varnish-6.4'
  - name: ' Learn more'
    url: 'https://flightdeck.ten7.com/'

flightdeck_init_commands: |
  if [ -n "${FLIGHTDECK_CONFIG}" ]; then
    config_file=$(mktemp "${TMPDIR:-/tmp/}$(basename $0).XXXXXXXXXXXX")
    echo "$FLIGHTDECK_CONFIG" | base64 -d > $config_file
    ansible-playbook -i /ansible/inventories/all.ini -e "@${config_file}" /ansible/init.yml
  elif [ -f "${FLIGHTDECK_CONFIG_FILE}" ]; then
    ansible-playbook -i /ansible/inventories/all.ini -e "@${FLIGHTDECK_CONFIG_FILE}" /ansible/init.yml
  elif [ -f "/config/varnish/flightdeck-varnish.yml" ]; then
    ansible-playbook -i /ansible/inventories/all.ini -e "@/config/varnish/flightdeck-varnish.yml" /ansible/init.yml
  elif [ -f "/config/varnish/flight-deck-varnish.yml" ]; then
    ansible-playbook -i /ansible/inventories/all.ini -e "@/config/varnish/flight-deck-varnish.yml" /ansible/init.yml
  else
    ansible-playbook -i /ansible/inventories/all.ini /ansible/init.yml
  fi

flightdeck_run_commands: |
  if [ -n "${FLIGHTDECK_CONFIG}" ]; then
    config_file=$(mktemp "${TMPDIR:-/tmp/}$(basename $0).XXXXXXXXXXXX")
    echo "$FLIGHTDECK_CONFIG" | base64 -d > $config_file
    ansible-playbook -i /ansible/inventories/all.ini -e "@${config_file}" /ansible/run.yml
  elif [ -f "${FLIGHTDECK_CONFIG_FILE}" ]; then
    ansible-playbook -i /ansible/inventories/all.ini -e "@${FLIGHTDECK_CONFIG_FILE}" /ansible/run.yml
  elif [ -f "/config/varnish/flightdeck-varnish.yml" ]; then
    ansible-playbook -i /ansible/inventories/all.ini -e "@/config/varnish/flightdeck-varnish.yml" /ansible/run.yml
  elif [ -f "/config/varnish/flight-deck-varnish.yml" ]; then
    ansible-playbook -i /ansible/inventories/all.ini -e "@/config/varnish/flight-deck-varnish.yml" /ansible/run.yml
  else
    ansible-playbook -i /ansible/inventories/all.ini /ansible/run.yml
  fi

flightdeck_varnish: {}

flightdeck_varnish_default_backend:
  name: "default"
  host: "{{ lookup('env', 'VARNISH_BACKEND_HOST') | default('localhost', true) }}"
  port: "{{ lookup('env', 'VARNISH_BACKEND_PORT') | default('80', true) }}"
  probe: no
  probeHost: "{{ lookup('env', 'VARNISH_BACKEND_HOST') | default('localhost', true) }}"
  probeHeaders: []
  probeInterval: "15s"
  probeTimeout: "5s"
  probeThreshold: 3
  probeWindow: 5
  firstByteTimeout: "300s"
  connectTimeout: "5s"
  betweenBytesTimeout: "2s"

flightdeck_varnish_defaults:
  upstreamProxies: {}
  retryCount: 3
  grace: "6h"
  staticTtl: "15m"
  backends:
    - "{{ flightdeck_varnish_default_backend }}"
  skipCache:
    - "^/status\\.php$"
    - "^/update\\.php"
    - "^/install\\.php"
    - "^/core/install\\.php"
    - "^/wp-login\\.php$"
    - "^/apc\\.php$"
    - "^/admin"
    - "^/admin/.*$"
    - "^/user"
    - "^/user/.*$"
    - "^/users/.*$"
    - "^/info/.*$"
    - "^/flag/.*$"
    - "^/wp-admin/.*$"
    - "^/edit.php$"
    - "^/post.php$"
    - "^/wp-cron.php$"
    - "^.*/ahah/.*$"
    - "^/system/files/.*$"
  keepCookies:
    - "SESS[a-z0-9]+"
    - "SSESS[a-z0-9]+"
    - "NO_CACHE"
    - "XDEBUG_SESSION"
    - "wordpress_logged_in_[a-z0-9]+"
    - "wordpress_sec_[a-z0-9]+"
    - "wp-settings-[0-9]+"
    - "wp-settings-time-[0-9]+"
  statusCheck: yes
  statusCheckUrl: "^/__flightdeck\\-status$"
  statusCheckMessage: "Check successful"
  secret: "secretish"
  hostPort: "6081"
  controlPort: "6082"
  memSize: "256m"
